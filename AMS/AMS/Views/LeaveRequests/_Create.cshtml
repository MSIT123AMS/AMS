@model AMS.Models.LeaveRequests

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "LeaveRequests", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "FormData" }))
{
    @Html.AntiForgeryToken()
    <body>
        <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <div>
                            <h1>
                                <span class="badge">請假申請單</span>
                            </h1>
                        </div>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="addForm">
                            @*<input type="hidden" name="ShipperID" id="ShipperID">*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new {@id= "StartTime_leave_create" ,@class = "form-control", Type = "datetime-local" } })
                                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @id = "EndTime_leave_create", @class = "form-control", Type = "datetime-local" } })
                                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="container">
                                <div class="row">
                                    <div class="form-group">
                                        <label class="badge badge-info" style="background-color:#A8D8B9">特休天數:@ViewBag.Off</label>
                                        <label class="badge badge-info" style="background-color:#A8D8B9">剩餘特休天數:@ViewBag.on</label><br />
                                        <label class="badge badge-info" style="background-color:#A8D8B9">補修已修時數:@ViewBag.Leave</label>
                                        <label class="badge badge-info" style="background-color:#A8D8B9">剩餘補修時數:@ViewBag.over</label>
                                        <label class="badge badge-info" style="background-color:#A8D8B9">本月休假時數(含未審核):@ViewBag.Leave1</label>
                                    </div>
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.LeaveType, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                @Html.DropDownList("LeaveType", null, "--請選擇--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LeaveReason, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                                @Html.TextAreaFor(model => model.LeaveReason, 5, 187, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LeaveReason, "", new { @class = "text-danger" })
                            </div>


                            <div class="container">
                                <div class="form-group ">
                                    @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label", @style = "text-align:left" })
                                    <div class="row">
                                        <div class="col-md-6">
                                            <input type="file" name="LeaveFile" id="LeaveFile" value="附件" accept="image/*" />
                                            <img id="imgPreview" src="@Url.Content("~/Img/upload.png")" class="img-thumbnail img-fluid" style="width:200px;height:200px" />
                                        </div>


                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-search" style="background-color:#FFFFFB;color:#91989F;border-color:#91989F" data-dismiss="modal" type="button">關閉</button>
                        <button type="button" class="btn btn-search" style="background-color:#787D7B;font-family:'Microsoft JhengHei';color:#FFFFFB" onclick="SaveFormDataUseAjaxPost2('@Url.Action("Create","LeaveRequests")')">
                            <i class="icon-docs"></i> 申請
                        </button>
                    </div>
                </div>
            </div>
        </div>

     

    </body>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgPreview').attr('src', e.target.result);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#LeaveFile").change(function () {
            readURL(this);
        });

        //$(document).ready(function () {
        //    $("#RequestTime").val(new Date().toJSON().slice(0, 19));;
        //});
        function zeroPadded(val) {
            if (val >= 10)
                return val;
            else
                return '0' + val;
        }
        $(document).ready(function () {
            d = new Date();
            $("#RequestTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + d.getHours() + ":" + d.getMinutes());
        });

        function zeroPadded(val) {
            if (val >= 10)
                return val;
            else
                return '0' + val;
        }
        $(document).ready(function () {
            d = new Date();
            $("#StartTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + "08" + ":" + "00");
        });

        function zeroPadded(val) {
            if (val >= 10)
                return val;
            else
                return '0' + val;
        }
        $(document).ready(function () {
            d = new Date();
            $("#EndTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + "18" + ":" + "00");
        });
    </script>

}
