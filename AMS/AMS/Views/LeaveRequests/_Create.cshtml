@model AMS.Models.LeaveRequests

@{
    ViewBag.Title = "Create";
}

<label class=" control-label" style="font-size:35px;margin:10px">請假申請</label>


    @using (Html.BeginForm("Create", "LeaveRequests", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="page-inner">
                <div class="card">
                    <hr />
                    @*<div class="form-group">
            @Html.LabelFor(model => model.RequestTime, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestTime, new { htmlAttributes = new { @class = "form-control", Type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.RequestTime, "", new { @class = "text-danger" })
            </div>
        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", Type = "datetime-local" } })
                            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", Type = "datetime-local" } })
                            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" style= "text-align:left" >特休天數:@ViewBag.Off</label><br />
                        <label class="control-label col-md-2" style= "text-align:left" >剩餘特休天數:@ViewBag.on</label>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LeaveType, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
                        <div class="col-md-10">
                            @Html.DropDownList("LeaveType", null, "--請選擇--", new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.LeaveType, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LeaveReason, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.LeaveReason, 5, 187, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LeaveReason, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    @*<div class="form-group">
            @Html.LabelFor(model => model.ReviewStatusID, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewStatusID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewStatusID, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    @*<div class="form-group">
            @Html.LabelFor(model => model.ReviewTime, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Attachment, htmlAttributes: new { @class = "control-label col-md-2",@style= "text-align:left" })
                        <div class="col-md-10">
                            <img id="imgPreview" src="@Url.Content("~/Img/upload.png")" style="width:240px;height:180px" />
                            <input type="file" name="LeaveFile" id="LeaveFile" accept="image/*" />
                            @*@Html.EditorFor(model => model.Attachment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Attachment, "", new { @class = "text-danger" })*@
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="送出" class="btn btn-default" />
                            <button class="btn btn-primary" onclick='funLeaveIndex()' type="button">取消</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @section scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imgPreview').attr('src', e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }
            $("#LeaveFile").change(function () {
                readURL(this);
            });

            //$(document).ready(function () {
            //    $("#RequestTime").val(new Date().toJSON().slice(0, 19));;
            //});
            function zeroPadded(val) {
                if (val >= 10)
                    return val;
                else
                    return '0' + val;
            }
            $(document).ready(function () {
                d = new Date();
                $("#RequestTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + d.getHours() + ":" + d.getMinutes());
            });

            function zeroPadded(val) {
                if (val >= 10)
                    return val;
                else
                    return '0' + val;
            }
            $(document).ready(function () {
                d = new Date();
                $("#StartTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + "08" + ":" + "00");
            });

            function zeroPadded(val) {
                if (val >= 10)
                    return val;
                else
                    return '0' + val;
            }
            $(document).ready(function () {
                d = new Date();
                $("#EndTime").val(d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate()) + "T" + "18" + ":" + "00");
            });
        </script>

    }
